{"remainingRequest":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\ts-loader\\index.js??ref--14-3!C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\lib\\game.ts","dependencies":[{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\lib\\game.ts","mtime":1627896646309},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\lib\\game.ts"],"names":[],"mappings":"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","sourcesContent":["import {Game} from \"@/types/game\";\r\nimport {VillainsList, VillainsMap} from \"@/consts/villains\";\r\nimport {getRandomInt, percentChance, randomItem, randomItemsExcluding} from \"@/lib/random\";\r\nimport {Villain} from \"@/types/villain\";\r\nimport {EncounterSetsMap, EncounterSetsList, Expert} from \"@/consts/encountersets\";\r\nimport {randomChallenge} from \"@/consts/challenges\";\r\nimport {EncounterSet} from \"@/types/encounterset\";\r\nimport {GameOption} from \"@/types/gameoption\";\r\nimport {UpgradeCategoriesList} from \"@/consts/upgrades\";\r\nimport {UpgradeCategory} from \"@/types/upgrade\";\r\nimport {Expansion} from \"@/types/expansion\";\r\n\r\ninterface HasDifficulty {\r\n\tdifficulty: number\r\n}\r\n\r\nexport const getExpansionsVillains = (expansions: Expansion[]) : Villain[] => {\r\n\treturn VillainsList.filter((villain : Villain) => {\r\n\t\tif (villain.requires == null) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tfor (var i = 0; i < expansions.length; i++) {\r\n\t\t\tif (expansions[i] === villain.requires) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t})\r\n}\r\n\r\nexport const getExpansionsEncSets = (expansions: Expansion[]) : EncounterSet[] => {\r\n\treturn EncounterSetsList.filter((encSet : EncounterSet) => {\r\n\t\tif (encSet.requires == null) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tfor (var i = 0; i < expansions.length; i++) {\r\n\t\t\tif (expansions[i] === encSet.requires) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t})\r\n}\r\n\r\nexport const generateTargetGame = (minDifficulty: number, maxDifficulty: number, expansions: Expansion[]) : Game => {\r\n\tlet count = 0\r\n\tconst maxTries = 500\r\n\r\n// Insert filter here\r\n\tlet newVillainsList = getExpansionsVillains(expansions)\r\n\r\n\tconst villain = randomItem(newVillainsList)\r\n\tlet closest : Game = generateGame(villain, expansions)\r\n\tconst targetDifficulty = (minDifficulty + maxDifficulty) / 2\r\n\tdo {\r\n\t\tcount++\r\n\t\tconst villain = randomItem(newVillainsList)\r\n\t\tconst contender = generateGame(villain, expansions)\r\n\r\n\t\t// First one in the range we return\r\n\t\tif (contender.difficulty <= maxDifficulty && contender.difficulty >= minDifficulty) {\r\n\t\t\treturn contender\r\n\t\t}\r\n\r\n\t\tconst currentScore = Math.abs(closest.difficulty - targetDifficulty)\r\n\t\tconst contenderScore = Math.abs(contender.difficulty - targetDifficulty)\r\n\t\tif (contenderScore < currentScore) {\r\n\t\t\tclosest = contender\r\n\t\t}\r\n\t} while(count < maxTries);\r\n\treturn closest\r\n}\r\n\r\nexport const generateGameOption  = (minDifficulty: number, maxDifficulty: number, existingUpgrades: UpgradeCategory[], expansions: Expansion[]) : GameOption => {\r\n\tconst types = randomItemsExcluding<UpgradeCategory>(2, UpgradeCategoriesList, [], existingUpgrades)\r\n\tconst game = generateTargetGame(minDifficulty, maxDifficulty, expansions)\r\n\tgame.rewardTypes = types\r\n\treturn {\r\n\t\tgame: game\r\n\t}\r\n}\r\n\r\nexport const generateGame = (villain: Villain, expansions: Expansion[]) : Game => {\r\n\t// Each villain has their own list of sets that must be included\r\n\tconst sets = villain.sets.map((name) => {\r\n\t\tconst set = EncounterSetsList.find((e: any) => e.name == name)\r\n\t\tif (!set) {\r\n\t\t\tthrow new Error('cant find villain\\'s encounter set')\r\n\t\t}\r\n\t\treturn set\r\n\t})\r\n\r\n\tif (!villain.noExtraSets) {\r\n\t\t// Each game gets one random encounter automatically\r\n\t\t// We loop until we find one that ISN'T part of their villain's base encounter set\r\n\t\tlet newEncSetList = getExpansionsEncSets(expansions)\r\n\r\n\t\tlet randomSet : EncounterSet\r\n\t\tlet noLoop = 0\r\n\t\tdo {\r\n\t\t\tnoLoop++\r\n\t\t\trandomSet = randomItem(newEncSetList)\r\n\t\t} while(randomSet.boss || sets.findIndex(s => s.name == randomSet.name) != -1 && noLoop < 10000)\r\n\t\tsets.push(randomSet)\r\n\t}\r\n\r\n\t// If expert isn't in there, there's a 10% chance to add it\r\n\tif (sets.findIndex(val => val.name == Expert.name) == -1) {\r\n\t\tif (percentChance(10)) {\r\n\t\t\tsets.push(Expert)\r\n\t\t}\r\n\t}\r\n\r\n\tconst game: Game = {\r\n\t\tvillain: villain,\r\n\t\trewardTypes: [],\r\n\t\tstatus: 'next',\r\n\t\tnumber: 0,\r\n\t\tencounterSets: sets,\r\n\t\tdifficulty: 0,\r\n\t\tchallenges: [],\r\n\t\theroLevel: 0,\r\n\t\tid: ''\r\n\t}\r\n\r\n\t/*// 10% chance for hero level 1\r\n\tif (percentChance(10)) {\r\n\t\tgame.heroLevel++\r\n\t}*/\r\n\r\n\t// Challenges are custom setup things that make it harder\r\n\t// They aren't part of the core game\r\n\t// There's a base chance to get one challenge\r\n\t// We keep reducing that chance by 5% and trying again, on a loop\r\n\t// The loop stops if you ever fail to get a challenge\r\n\tlet challengePercent = 50\r\n\twhile (percentChance(challengePercent)) {\r\n\t\tconst challenge = randomChallenge()\r\n\t\tgame.challenges.push(challenge)\r\n\t\tchallengePercent -= 5\r\n\t}\r\n\r\n\tgame.difficulty = getGameDifficulty(game)\r\n\tgame.id = getGameId(game)\r\n\treturn game\r\n}\r\n\r\nexport const generateGames = (expansions: Expansion[]) : Game[] => {\r\n\tconst possibleVillainKeys = VillainsList.map((v : Villain) => v.key)\r\n\tconst numGames = 4\r\n\r\n\tconst villainKeys : string[] = randomItemsExcluding<string>(numGames, possibleVillainKeys, [])\r\n\r\n\tconst games : Game[] = []\r\n\r\n\t// To try to make these less spikey, we're generating many different games randomly\r\n\t// Then we're ordering them by their difficulty, and picking one from a different place\r\n\t// in the list for each game in the run\r\n\tfor (var i = 0; i < 200; i++) {\r\n\t\tvillainKeys.forEach((key, idx) => {\r\n\t\t\tconst villain = VillainsMap[key]\r\n\t\t\tconst game = generateGame(villain, expansions)\r\n\t\t\tgames.push(game)\r\n\t\t})\r\n\t}\r\n\r\n\tconst sorted = games.sort((a, b) => {\r\n\t\treturn a.difficulty < b.difficulty ? -1 : 1\r\n\t})\r\n\r\n\tconst pageSize = Math.floor(sorted.length / numGames)\r\n\r\n\tconst chosen = []\r\n\tfor (var i = 1; i <= numGames; i++) {\r\n\t\tconst min = (i - 1) * pageSize\r\n\t\tconst max = min + pageSize\r\n\t\tchosen.push(sorted[getRandomInt(min, max)])\r\n\t}\r\n\r\n\treturn chosen\r\n}\r\n\r\nexport const getGameDifficulty = (game: Game) : number => {\r\n\tlet diff = game.villain.difficulty\r\n\tlet multiplier = 1\r\n\tgame.encounterSets.forEach((set) => {\r\n\t\tdiff += set.difficulty\r\n\t})\r\n\r\n\tgame.challenges.forEach((cha) => {\r\n\t\tdiff += cha.difficulty\r\n\t})\r\n\r\n\tdiff *= multiplier\r\n\r\n\tdiff += diff * (game.heroLevel * 1.25) // 25% harder for each hero level\r\n\r\n\treturn Math.round(diff)\r\n}\r\n\r\nexport const getGameId = (game: Game) : string => {\r\n\treturn [\r\n\t\tgame.villain.name,\r\n\t\tgame.encounterSets.map(ec => ec.name).join('-'),\r\n\t\tgame.challenges.map(c => c.name).join('-')\r\n\t].join('_')\r\n}\r\n"],"sourceRoot":""}]}