{"remainingRequest":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\components\\Upgrades.vue?vue&type=style&index=0&id=894d5432&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\components\\Upgrades.vue","mtime":1627896646297},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi51cGdyYWRlLWluZm8gew0KICBwYWRkaW5nOiAxMHB4Ow0KICBtYXJnaW46IDAgMCAxMHB4IDA7DQogIGJvcmRlcjogMXB4IHNvbGlkICMzMzM7DQp9DQoNCi50b2dnbGUtbGV2ZWxzIHsNCiAgcGFkZGluZy1ib3R0b206IDVweDsNCn0NCi51cGdyYWRlLWNhdGVnb3J5LXggew0KICBtYXJnaW4tYm90dG9tOiA4MHB4Ow0KfQ0K"},{"version":3,"sources":["Upgrades.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Upgrades.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <h1>List of Upgrades</h1>\r\n    <div>Available for debugging stuff.</div>\r\n    <div v-for=\"(cat, catidx) in categories\" :key=\"catidx\" class=\"upgrade-category-x\">\r\n      <h2 class=\"banger\" :class=\"{pink: cat.heroic, blue: !cat.heroic}\">{{cat.name}}</h2>\r\n      <div v-for=\"(upgrade, idx) in cat.upgrades\"\r\n       :key=\"idx\"\r\n       class=\"upgrade-info\"\r\n       >\r\n        <div class=\"toggle-levels\">\r\n          <button @click=\"up(catidx, idx)\">Up</button>\r\n          <button @click=\"down(catidx, idx)\">Down</button>\r\n        </div>\r\n        <Upgrade :upgrade=\"upgrade\" />\r\n        <div v-if=\"upgrade.level != upgrade.maxLevel\" class=\"upgrade-msg\" v-html=\"upgrade.levelUpMessage()\"></div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport Vue from \"vue\";\r\nimport {UpgradesList} from \"@/consts/upgrades\";\r\nimport Upgrade from \"@/components/Upgrade.vue\";\r\n\r\nexport default Vue.extend({\r\n  data () {\r\n    let catIndex = -1\r\n    let prevCat = ''\r\n    const cats : any[]  = []\r\n    let whatever : any[] = UpgradesList.map((upgrade) : any => {\r\n      const newT : any = {\r\n        ...upgrade,\r\n      }\r\n      newT.catName = upgrade.requiresHero ? upgrade.requiresHero : upgrade.category\r\n      return newT\r\n    })\r\n    whatever = whatever.sort((a, b) => {\r\n      return a.catName > b.catName ? 1 : -1\r\n    })\r\n\r\n    whatever.forEach((upgrade) => {\r\n      if (upgrade.catName != prevCat) {\r\n        cats.push({\r\n          name: upgrade.catName,\r\n          upgrades: [],\r\n          heroic: !!upgrade.requiresHero\r\n        })\r\n        prevCat = upgrade.catName\r\n        catIndex++\r\n      }\r\n      cats[catIndex].upgrades.push(upgrade)\r\n    })\r\n\r\n    return {\r\n      categories: cats\r\n    }\r\n  },\r\n  components: {\r\n    Upgrade: Upgrade\r\n  },\r\n  methods: {\r\n    down (catIdx : number, idx: number) {\r\n      const up = this.categories[catIdx].upgrades[idx]\r\n      if (up.level == 1) {\r\n        return\r\n      }\r\n\r\n      Vue.set(this.categories[catIdx].upgrades[idx], 'level', this.categories[catIdx].upgrades[idx].level-1)\r\n    },\r\n    up (catIdx : number, idx: number) {\r\n      const up = this.categories[catIdx].upgrades[idx]\r\n      if (up.level == up.maxLevel) {\r\n        return\r\n      }\r\n      Vue.set(this.categories[catIdx].upgrades[idx], 'level', this.categories[catIdx].upgrades[idx].level+1)\r\n    }\r\n  }\r\n})\r\n</script>\r\n<style scoped>\r\n.upgrade-info {\r\n  padding: 10px;\r\n  margin: 0 0 10px 0;\r\n  border: 1px solid #333;\r\n}\r\n\r\n.toggle-levels {\r\n  padding-bottom: 5px;\r\n}\r\n.upgrade-category-x {\r\n  margin-bottom: 80px;\r\n}\r\n</style>\r\n"]}]}