{"remainingRequest":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\components\\Downtime.vue?vue&type=style&index=0&id=733947d1&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\components\\Downtime.vue","mtime":1627896646294},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kb3dudGltZS1vcHRpb24gewoJcG9zaXRpb246IHJlbGF0aXZlOwp9Ci5kb3dudGltZS1vcHRpb24gLnRvcC1sZWZ0IHsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKfQoKLmRvd250aW1lLW9wdGlvbi5kaXNhYmxlZCwKLmRvd250aW1lLW9wdGlvbi5kaXNhYmxlZDpob3ZlciB7CglvcGFjaXR5OiAwLjU7CgliYWNrZ3JvdW5kOiAjZmZmOwoJY3Vyc29yOiBuby1kcm9wOwp9CgoubGV2ZWwtdXAtbGV2ZWxzIHsKCWZvbnQtc3R5bGU6IGl0YWxpYzsKfQoKLmxldmVsLXVwLWxldmVscyBzdHJvbmcgewoJY29sb3I6IGZvcmVzdGdyZWVuOwp9CgpwIHsKCW1hcmdpbi1ib3R0b206IDAuNWVtOwp9CgouYmlnLWJ1dHRvbiB7CgltYXJnaW4tdG9wOiAxZW07Cn0K"},{"version":3,"sources":["Downtime.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Downtime.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\t<div class=\"resting\">\r\n\t\t<h2 class=\"banger green\">Mission Success!</h2>\r\n\t\t<p>After a successful mission you've earned some <strong>downtime</strong>. Use it well.</p>\r\n    <p>Each hero must choose to either <strong>heal some damage</strong> <em>or</em> <strong>level up an upgrade</strong></p>\r\n\t\t<div v-for=\"(player, idx) in players\" :key=\"player.name\" class=\"upgrade-player-area\">\r\n\t\t\t<div class=\"\">\r\n\t\t\t\t<h3 class=\"banger center hero-name\" :class=\"player.hero.cssClass\">{{player.hero.name}}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"downtime-options\">\r\n\t\t\t\t<div class=\"downtime-option panel has-top-title choice\"\r\n\t\t\t\t\t@click=\"() => {\r\n\t\t\t\t\t\ttoggleSelection(idx, 'heal')\r\n\t\t\t\t\t}\"\r\n\t\t\t\t\t:class=\"{\r\n\t\t\t\t\t\t'active': selections[idx] && selections[idx].type === 'heal',\r\n\t\t\t\t\t\tdisabled: player.healAmount == 0\r\n\t\t\t\t\t}\">\r\n\t\t\t\t\t<h4 class=\"comic-box top-left\">Medical Aid</h4>\r\n\t\t\t\t\t<div>\r\n            <span v-if=\"player.currentHP == player.startingHP\">\r\n              You're all patched up! Your starting HP is {{player.startingHP}}.\r\n            </span>\r\n            <span v-else>\r\n              Heal for {{getHealAmount(player)}}. Your current HP is {{player.currentHP}} of {{player.startingHP}}.\r\n              <span v-if=\"player.startingHP == 0\">You're too hurt to do anything else.</span>\r\n            </span>\r\n\r\n          </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-for=\"upgrade in player.upgrades\"\r\n\t\t\t\t\t\tclass=\"downtime-option panel has-top-title choice\"\r\n\r\n\t\t\t\t\t\t@click=\"() => {\r\n\t\t\t\t\t\t\ttoggleSelection(idx, 'upgrade', upgrade.name)\r\n\t\t\t\t\t\t}\"\r\n\t\t\t\t\t\t:class=\"{\r\n\t\t\t\t\t\t\t'active': selections[idx] && selections[idx].type === 'upgrade' && selections[idx].upgradeName === upgrade.name,\r\n\t\t\t\t\t\t\tdisabled: upgrade.level === upgrade.maxLevel || player.startingHP == 0\r\n\t\t\t\t\t\t}\"\r\n\t\t\t\t\t\t:key=\"upgrade.name\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t<h4 class=\"comic-box top-left\">\r\n\t\t\t\t\t\t<span v-if=\"upgrade.level === upgrade.maxLevel\">\r\n\t\t\t\t\t\t\t{{upgrade.name}} is Max Level\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span v-else>\r\n\t\t\t\t\t\t\tLevel Up {{upgrade.name}}\r\n\t\t\t\t\t\t\t<span class=\"level-up-levels\">(Lvl {{upgrade.level}} to <strong>Lvl {{upgrade.level+1\t}}</strong>)</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<div class=\"description\" v-html=\"upgrade.description()\"></div>\r\n\t\t\t\t\t<div v-if=\"upgrade.level != upgrade.maxLevel\" class=\"upgrade-msg\" v-html=\"upgrade.levelUpMessage()\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<button class=\"big-button\" @click=\"confirmDowntime\">Confirm Downtime Actions</button>\r\n    <div class=\"next-step\">Next: Choose Upgrades</div>\r\n\t</div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport Vue from \"vue\"\r\nimport {mapState} from \"vuex\"\r\n// eslint-disable-next-line no-unused-vars\r\nimport {DowntimeAction, DowntimeActionType} from \"@/types/downtime\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport {Upgrade} from \"@/types/upgrade\";\r\nimport {getHealAmount} from \"@/lib/players\";\r\n\r\ntype DowntimeData = {\r\n\tselections: Record<number, DowntimeAction>\r\n}\r\n\texport default Vue.extend({\r\n\t\tname: 'Downtime',\r\n\t\tcomputed: {\r\n\t\t\t...mapState(['players'])\r\n\t\t},\r\n\t\tdata () : DowntimeData {\r\n\t\t\treturn {\r\n\t\t\t\tselections: {}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n      getHealAmount: getHealAmount,\r\n\t\t\tconfirmDowntime () {\r\n\t\t\t\tthis.$store.dispatch('doDowntime', this.selections)\r\n\t\t\t},\r\n\t\t\ttoggleSelection (playerIndex: number, actionType : DowntimeActionType, upgradeName = \"\") {\r\n\t\t\t\tconst action : DowntimeAction = {\r\n\t\t\t\t\ttype: actionType\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst upgrade = this.players[playerIndex].upgrades.find((u : Upgrade) => u.name === upgradeName)\r\n\t\t\t\tif (upgrade && upgrade.level >= upgrade.maxLevel) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (actionType == 'upgrade') {\r\n\t\t\t\t\taction.upgradeName = upgradeName\r\n\t\t\t\t}\r\n\t\t\t\tVue.set(this.selections, playerIndex, action)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n</script>\r\n<style scoped>\r\n\t.downtime-option {\r\n\t\tposition: relative;\r\n\t}\r\n\t.downtime-option .top-left {\r\n\t\tposition: absolute;\r\n\t}\r\n\r\n\t.downtime-option.disabled,\r\n\t.downtime-option.disabled:hover {\r\n\t\topacity: 0.5;\r\n\t\tbackground: #fff;\r\n\t\tcursor: no-drop;\r\n\t}\r\n\r\n\t.level-up-levels {\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t.level-up-levels strong {\r\n\t\tcolor: forestgreen;\r\n\t}\r\n\r\n\tp {\r\n\t\tmargin-bottom: 0.5em;\r\n\t}\r\n\r\n\t.big-button {\r\n\t\tmargin-top: 1em;\r\n\t}\r\n</style>\r\n"]}]}