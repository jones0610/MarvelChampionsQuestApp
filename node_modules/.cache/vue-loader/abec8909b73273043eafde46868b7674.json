{"remainingRequest":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\components\\ChooseSettings.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\src\\components\\ChooseSettings.vue","mtime":1627896646294},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\searl\\Downloads\\Marvel Champions\\MarvelChampionsQuestApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pbnRyb2R1Y3Rpb24gewogIHBhZGRpbmc6IDFlbTsKfQoKaDEgewogIGZvbnQtZmFtaWx5OiAnQmFuZ2VycycsICdDb21pYyBTYW5zJywgY3Vyc2l2ZTsKICBmb250LXNpemU6IDM4cHg7Cn0KCi5leHBhbnNpb25zIHsKICBtYXJnaW46IDFlbSAwIDJlbTsKfQoucGFuZWwuZXhwYW5zaW9uIHsKICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIHBhZGRpbmc6IDAuNXJlbSAwLjc1cmVtOwp9CgoucGxheWVycyB7CiAgZGlzcGxheTogZmxleAp9CgoucGxheWVyIHsKICB3aWR0aDogMjUlOwogIHBhZGRpbmctcmlnaHQ6IDVweDsKICBtYXJnaW4tYm90dG9tOiAyZW07Cn0KCi5wbGF5ZXIgLnBhbmVsLmNob2ljZSB7CiAgcGFkZGluZzogMC40cmVtIDA7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoucGxheWVyIGg0IHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1mYW1pbHk6ICdCYW5nZXJzJywgJ0NvbWljIFNhbnMnLCBjdXJzaXZlOwogIG1hcmdpbi1sZWZ0OiAtM3B4OwogIGZvbnQtc2l6ZTogMThweDsKfQoKLnBsYXllciAucGFuZWwsCi5leHBhbnNpb24ucGFuZWwgewogIGJveC1zaGFkb3c6IDJweCAycHggMHB4ICMyMjI7CiAgbWFyZ2luLWJvdHRvbTogNXB4Owp9Cgo="},{"version":3,"sources":["ChooseSettings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ChooseSettings.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"introduction\">\r\n    <h1>Rogue Champions</h1>\r\n    <p>Rogue-like campaign play for Marvel Champions Living Card Game.</p>\r\n    <p>Fight multiple battles on your way to the big bad boss.</p>\r\n\r\n\t\t<p><strong>Keep your health</strong> between fights. Earn and <strong>level up new upgrades</strong> between each fight.</p>\r\n\r\n    <div class=\"expansions\">\r\n      <h2 class=\"banger red\">Choose Your Expansions</h2>\r\n      <div v-for=\"exp in allExpansions\" :key=\"exp.name\" @click=\"() => { _toggleExpansion(exp.name) }\" class=\"panel expansion choice\" :class=\"{active: expansionNames.indexOf(exp.name) >= 0}\">\r\n        {{exp.name}}\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"banger green\">Choose Your Heroes</h2>\r\n    <div class=\"players\">\r\n      <div v-for=\"(playerHero, idx) in playerSelections\" :key=\"idx\" class=\"player\">\r\n        <h4>Player {{idx+1}}</h4>\r\n        <div v-for=\"hero in heroes\" class=\"panel choice\" :class=\"{active: playerHero == hero.name, [hero.cssClass]: true}\" :key=\"hero.name\" @click=\"() => selectHero(idx, hero)\">{{hero.name}}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"banger green\">Number of Games</h2>\r\n    <div class=\"players\">\r\n      <input type=\"number\" v-model=\"numGames\" />\r\n    </div>\r\n\r\n    <button class=\"big-button\" @click=\"startRun\">\r\n      Start Run\r\n    </button>\r\n    <div class=\"next-step\">Next: Choose Upgrades</div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue';\r\n// eslint-disable-next-line no-unused-vars\r\nimport {CoreSet, ExpansionsList} from \"@/consts/expansions\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport {Hero} from \"@/types/hero\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nimport {Expansion} from \"@/types/expansion\";\r\nimport {mapActions, mapGetters, mapState} from \"vuex\";\r\n\r\ntype SettingsData = {\r\n  allExpansions: Expansion[],\r\n  playerSelections: string[],\r\n  numGames: number\r\n}\r\n\r\nexport default Vue.extend({\r\n  name: 'ChooseSettings',\r\n  data () : SettingsData {\r\n    return {\r\n      allExpansions: ExpansionsList,\r\n      numGames: 4,\r\n      playerSelections: ['', '', '', ''],\r\n    }\r\n  },\r\n  async created () {\r\n    const expansions = window.localStorage.getItem('expansions')\r\n    if (expansions) {\r\n      const names = expansions.split(',')\r\n      names.forEach((name) => {\r\n        this._toggleExpansion(name)\r\n      })\r\n    } else {\r\n      this._toggleExpansion(CoreSet.name)\r\n    }\r\n\r\n    this.numGames = 5\r\n    const numStoredStr = window.localStorage.getItem('numGames')\r\n\r\n    if (numStoredStr) {\r\n      const numStored = parseInt(numStoredStr)\r\n\r\n      if (numStored && !isNaN(numStored)) {\r\n        this.numGames = numStored\r\n      }\r\n    }\r\n\r\n    // TESTING\r\n    let hash = window.location.hash\r\n    hash = hash.replaceAll('#', '')\r\n    hash = hash.replaceAll('/', '')\r\n    if (hash && hash.length) {\r\n      await this.$store.dispatch('enableAllExpansions')\r\n      this.playerSelections = hash.split(',').map(decodeURIComponent)\r\n      this.startRun()\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      expansions: 'expansions',\r\n      players: 'players'\r\n    }),\r\n    ...mapGetters({\r\n      heroes: 'heroes',\r\n      expansionNames: 'expansionNames'\r\n    }),\r\n    ...mapActions({\r\n      toggleExpansion: 'toggleExpansion'\r\n    })\r\n  },\r\n  methods: {\r\n    _toggleExpansion (name: string) {\r\n      this.$store.dispatch('toggleExpansion', name)\r\n    },\r\n    async startRun () {\r\n      try {\r\n        window.localStorage.setItem('expansions', this.expansionNames.join(','))\r\n        window.localStorage.setItem('numGames', this.numGames.toString())\r\n      } catch (ex) {\r\n        console.log(ex)\r\n      }\r\n\r\n      if (!this.expansions.length) {\r\n        alert('Expansions needed')\r\n        return\r\n      }\r\n      if (this.players[0] == '') {\r\n        alert('First player needed')\r\n        return\r\n      }\r\n\r\n      await this.$store.dispatch('createPlayers', this.playerSelections)\r\n      await this.$store.dispatch('startRun', {\r\n        numGames: this.numGames\r\n      })\r\n    },\r\n    selectHero (playerIdx: number, hero: Hero) {\r\n      if (this.playerSelections[playerIdx] == hero.name) {\r\n        Vue.set(this.playerSelections, playerIdx, '')\r\n      } else {\r\n        for (var i = 0; i < this.playerSelections.length; i++) {\r\n          if (this.playerSelections[i] == hero.name) {\r\n            return\r\n          }\r\n        }\r\n        Vue.set(this.playerSelections, playerIdx, hero.name)\r\n      }\r\n    },\r\n  }\r\n});\r\n</script>\r\n<style>\r\n  .introduction {\r\n    padding: 1em;\r\n  }\r\n\r\n  h1 {\r\n    font-family: 'Bangers', 'Comic Sans', cursive;\r\n    font-size: 38px;\r\n  }\r\n\r\n  .expansions {\r\n    margin: 1em 0 2em;\r\n  }\r\n  .panel.expansion {\r\n    margin-bottom: 5px;\r\n    cursor: pointer;\r\n    padding: 0.5rem 0.75rem;\r\n  }\r\n\r\n  .players {\r\n    display: flex\r\n  }\r\n\r\n  .player {\r\n    width: 25%;\r\n    padding-right: 5px;\r\n    margin-bottom: 2em;\r\n  }\r\n\r\n  .player .panel.choice {\r\n    padding: 0.4rem 0;\r\n    text-align: center;\r\n  }\r\n\r\n  .player h4 {\r\n    text-align: center;\r\n    font-family: 'Bangers', 'Comic Sans', cursive;\r\n    margin-left: -3px;\r\n    font-size: 18px;\r\n  }\r\n\r\n  .player .panel,\r\n  .expansion.panel {\r\n    box-shadow: 2px 2px 0px #222;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n</style>\r\n"]}]}